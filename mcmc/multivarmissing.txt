Multivariate Missing Data

The following example highlights some of WinBUGS' capacities for handling missing data.  We have a data set of 10 observations on 3 variables.  Only one of the variables, z, is completely observed.  The other two variables, x and y, have a non-overlapping pattern of missing data.  

Data (rectangular format):  
x[]	y[]	z[]
1	NA	NA
2	NA	4
3	NA	3
4	NA	5
5	NA	7
NA	7	9
NA	8	8
NA	9	11
NA	8	10
NA	9	8


We use z to make imputations for x, and use the complete data for x (observed and imputed) and z to predict y.  No special handling of the missing data is required; when missing data appears on the left-hand side of a stochastic expression (a "~" or "twiddle"), WinBUGS will automatically generate imputations.  Version 1.4 of WinBUGS promises even better capacities for dealing with missing data.

This example displays extremely high within-chain autocorrelation for the regression parameters, which is not unsurprising given the large amount of missing data.  Multiple chains, a long run, and/or a large thinning interval is required in order to reassure ourselves that the sampler is visiting locations in the parameter space with frequencies proportional to their posterior probability.  
model{
	for (i in 1:10){
		x[i] ~ dnorm(mux[i],taux);
		mux[i] <- gamma[1] + gamma[2]*z[i];
	
		y[i] ~ dnorm(muy[i],tauy);
		muy[i] <- beta[1] + beta[2]*x[i] + beta[3]*z[i];
	}
	
	## priors
	z[1] ~ dunif(-3,6);
	
	gamma[1] ~ dnorm(0.0,.001);
	gamma[2] ~ dnorm(0.0,.001);
	
	for(j in 1:3){
		beta[j] ~ dnorm(0.0,.001);
	}
	taux ~ dgamma(.01,.01);
	tauy ~ dgamma(.01,.01);
	sigmax <- sqrt(1/taux);        ## convert prec to sigmas
	sigmay <- sqrt(1/tauy);
}



initial values:
list(gamma=c(0,0),beta=c(0,0,0),taux=1,tauy=1)

list(gamma=c(-10,10),beta=c(-10,10,-10),taux=10,tauy=10)